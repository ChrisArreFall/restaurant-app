{"ast":null,"code":"var _jsxFileName = \"/Users/chris/Documents Local/SOA/Proyecto1/restaurant-app/React_App/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Fullscreen from \"react-full-screen\";\nimport { Connector } from 'mqtt-react';\nimport { subscribe } from 'mqtt-react';\nimport _MessageContainer from './mqtt/MessageContainer';\nimport { useAlert } from 'react-alert';\nvar buttonState = \"null\";\n\nconst check_input = input => {\n  const texto_prueba = \"\";\n  const size = input.data.length; // if(input.data[] === 'button5'){\n  //   texto_prueba = \"se presiono el 5\"\n  // }\n\n  return texto_prueba;\n}; // Messages are passed on the \"data\" prop\n\n\nconst MessageList = props => {// return (<div>{props.data.map( (message) => {\n  //       console.log(message)\n  //       buttonState = message\n  //       return(<li>{props.data.text}{message}</li>)\n  //     }\n  //   )}</div>\n  // )\n}; // simple subscription to messages on the topic\n\n\nconst MessageContainer = subscribe({\n  topic: 'restaurant/buttons'\n})(MessageList);\n\nclass App extends Component {\n  constructor(props) {\n    super();\n\n    this.goFull = () => {\n      this.setState({\n        isFull: true\n      });\n    };\n\n    this.setPage = newPage => {\n      this.setState({\n        page: newPage\n      });\n    };\n\n    this.state = {\n      isFull: false,\n      button: [{\n        label: \"Back\",\n        visibility: true\n      }, {\n        label: \"Ordenar\",\n        visibility: true\n      }, {\n        label: \"Llamar mesero\",\n        visibility: true\n      }, {\n        label: \"Pagar\",\n        visibility: true\n      }, {\n        label: \"Back\",\n        visibility: true\n      }],\n      page: \"Inicioo\"\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.goFull,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Go Fullscreen\"), React.createElement(Fullscreen, {\n      enabled: this.state.isFull,\n      onChange: isFull => this.setState({\n        isFull\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"fullscreen-enabled\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Connector, {\n      mqttProps: \"ws://192.168.100.103:12345/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }))));\n  }\n\n} //<MessageList/>\n\n\nexport default App;","map":{"version":3,"sources":["/Users/chris/Documents Local/SOA/Proyecto1/restaurant-app/React_App/src/App.js"],"names":["React","Component","Fullscreen","Connector","subscribe","_MessageContainer","useAlert","buttonState","check_input","input","texto_prueba","size","data","length","MessageList","props","MessageContainer","topic","App","constructor","goFull","setState","isFull","setPage","newPage","page","state","button","label","visibility","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AAEA,OAAOC,UAAP,MAAuB,mBAAvB;AAEA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAASC,SAAT,QAA0B,YAA1B;AAGA,OAAOC,iBAAP,MAA8B,yBAA9B;AAEA,SAASC,QAAT,QAAyB,aAAzB;AAEA,IAAIC,WAAW,GAAG,MAAlB;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAE7B,QAAMC,YAAY,GAAG,EAArB;AAEA,QAAMC,IAAI,GAAGF,KAAK,CAACG,IAAN,CAAWC,MAAxB,CAJ6B,CAM7B;AACA;AACA;;AACA,SAAOH,YAAP;AACD,CAVD,C,CAYA;;;AACA,MAAMI,WAAW,GAAIC,KAAD,IAAW,CAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CARD,C,CAUA;;;AACA,MAAMC,gBAAgB,GAAGZ,SAAS,CAAC;AACjCa,EAAAA,KAAK,EAAE;AAD0B,CAAD,CAAT,CAEtBH,WAFsB,CAAzB;;AAIA,MAAMI,GAAN,SAAkBjB,SAAlB,CAA4B;AAC1BkB,EAAAA,WAAW,CAACJ,KAAD,EAAQ;AACjB;;AADiB,SAgBnBK,MAhBmB,GAgBV,MAAM;AACb,WAAKC,QAAL,CAAc;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAd;AACD,KAlBkB;;AAAA,SAoBnBC,OApBmB,GAoBRC,OAAD,IAAa;AACrB,WAAKH,QAAL,CAAc;AAAEI,QAAAA,IAAI,EAAED;AAAR,OAAd;AACD,KAtBkB;;AAGjB,SAAKE,KAAL,GAAc;AACZJ,MAAAA,MAAM,EAAE,KADI;AAEZK,MAAAA,MAAM,EAAE,CACN;AAACC,QAAAA,KAAK,EAAC,MAAP;AAAeC,QAAAA,UAAU,EAAC;AAA1B,OADM,EAEN;AAACD,QAAAA,KAAK,EAAC,SAAP;AAAkBC,QAAAA,UAAU,EAAC;AAA7B,OAFM,EAGN;AAACD,QAAAA,KAAK,EAAC,eAAP;AAAwBC,QAAAA,UAAU,EAAC;AAAnC,OAHM,EAIN;AAACD,QAAAA,KAAK,EAAC,OAAP;AAAgBC,QAAAA,UAAU,EAAC;AAA3B,OAJM,EAKN;AAACD,QAAAA,KAAK,EAAC,MAAP;AAAeC,QAAAA,UAAU,EAAC;AAA1B,OALM,CAFI;AASZJ,MAAAA,IAAI,EAAC;AATO,KAAd;AAWD;;AAUDK,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,OAAO,EAAE,KAAKV,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAIE,oBAAC,UAAD;AACE,MAAA,OAAO,EAAE,KAAKM,KAAL,CAAWJ,MADtB;AAEE,MAAA,QAAQ,EAAEA,MAAM,IAAI,KAAKD,QAAL,CAAc;AAACC,QAAAA;AAAD,OAAd,CAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,6BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,CAJF,CADF;AAiBD;;AA3CyB,C,CA6C5B;;;AAEA,eAAeJ,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nimport Fullscreen from \"react-full-screen\";\n\nimport { Connector } from 'mqtt-react';\nimport { subscribe } from 'mqtt-react';\n\n\nimport _MessageContainer from './mqtt/MessageContainer';\n\nimport { useAlert } from 'react-alert'\n\nvar buttonState = \"null\"\n\nconst check_input = (input) => {\n\n  const texto_prueba = \"\"\n\n  const size = input.data.length\n\n  // if(input.data[] === 'button5'){\n  //   texto_prueba = \"se presiono el 5\"\n  // }\n  return(texto_prueba)\n}\n\n// Messages are passed on the \"data\" prop\nconst MessageList = (props) => {\n  // return (<div>{props.data.map( (message) => {\n  //       console.log(message)\n  //       buttonState = message\n  //       return(<li>{props.data.text}{message}</li>)\n  //     }\n  //   )}</div>\n  // )\n};\n\n// simple subscription to messages on the topic\nconst MessageContainer = subscribe({\n  topic: 'restaurant/buttons'\n})(MessageList)\n\nclass App extends Component {\n  constructor(props) {\n    super();\n \n    this.state = ({\n      isFull: false,\n      button: [\n        {label:\"Back\", visibility:true},\n        {label:\"Ordenar\", visibility:true},\n        {label:\"Llamar mesero\", visibility:true},\n        {label:\"Pagar\", visibility:true},\n        {label:\"Back\", visibility:true}\n      ],\n      page:\"Inicioo\"\n    });\n  }\n \n  goFull = () => {\n    this.setState({ isFull: true });\n  }\n\n  setPage = (newPage) => {\n    this.setState({ page: newPage });\n  }\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <button onClick={this.goFull}>\n          Go Fullscreen\n        </button>\n        <Fullscreen\n          enabled={this.state.isFull}\n          onChange={isFull => this.setState({isFull})}\n        >\n          <div className=\"fullscreen-enabled\">\n            <Connector mqttProps=\"ws://192.168.100.103:12345/\">\n              \n            </Connector>\n          </div>\n        </Fullscreen>\n      </div>\n    );\n  }\n}\n//<MessageList/>\n\nexport default App;"]},"metadata":{},"sourceType":"module"}