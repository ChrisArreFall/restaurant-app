{"ast":null,"code":"var _jsxFileName = \"/Users/chris/Documents Local/SOA/Proyecto1/restaurant-app/React_App/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Fullscreen from \"react-full-screen\";\nimport { Connector } from 'mqtt-react';\nimport { subscribe } from 'mqtt-react';\nimport _MainContainer from './mqtt/MainContainer';\nconst MainContainer = subscribe({\n  topic: 'restaurant/buttons'\n})(_MainContainer);\n\nclass App extends Component {\n  constructor(props) {\n    super();\n\n    this.goFull = () => {\n      this.setState({\n        isFull: true\n      });\n    };\n\n    this.setPage = newPage => {\n      this.setState({\n        page: newPage\n      });\n    };\n\n    this.state = {\n      isFull: false\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.goFull,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Go Fullscreen\"), React.createElement(Fullscreen, {\n      enabled: this.state.isFull,\n      onChange: isFull => this.setState({\n        isFull\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"fullscreen-enabled\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Connector, {\n      mqttProps: \"ws://192.168.100.103:12345/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(MainContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    })))));\n  }\n\n} //<MessageList/>\n\n\nexport default App;","map":{"version":3,"sources":["/Users/chris/Documents Local/SOA/Proyecto1/restaurant-app/React_App/src/App.js"],"names":["React","Component","Fullscreen","Connector","subscribe","_MainContainer","MainContainer","topic","App","constructor","props","goFull","setState","isFull","setPage","newPage","page","state","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AAEA,OAAOC,UAAP,MAAuB,mBAAvB;AAEA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAASC,SAAT,QAA0B,YAA1B;AAGA,OAAOC,cAAP,MAA2B,sBAA3B;AAGA,MAAMC,aAAa,GAAGF,SAAS,CAAC;AAACG,EAAAA,KAAK,EAAE;AAAR,CAAD,CAAT,CAAyCF,cAAzC,CAAtB;;AAEA,MAAMG,GAAN,SAAkBP,SAAlB,CAA4B;AAC1BQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB;;AADiB,SAQnBC,MARmB,GAQV,MAAM;AACb,WAAKC,QAAL,CAAc;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAd;AACD,KAVkB;;AAAA,SAYnBC,OAZmB,GAYRC,OAAD,IAAa;AACrB,WAAKH,QAAL,CAAc;AAAEI,QAAAA,IAAI,EAAED;AAAR,OAAd;AACD,KAdkB;;AAGjB,SAAKE,KAAL,GAAc;AACZJ,MAAAA,MAAM,EAAE;AADI,KAAd;AAGD;;AAUDK,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,OAAO,EAAE,KAAKP,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAIE,oBAAC,UAAD;AACE,MAAA,OAAO,EAAE,KAAKM,KAAL,CAAWJ,MADtB;AAEE,MAAA,QAAQ,EAAEA,MAAM,IAAI,KAAKD,QAAL,CAAc;AAACC,QAAAA;AAAD,OAAd,CAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,6BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CAJF,CAJF,CADF;AAiBD;;AAnCyB,C,CAqC5B;;;AAEA,eAAeL,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nimport Fullscreen from \"react-full-screen\";\n\nimport { Connector } from 'mqtt-react';\nimport { subscribe } from 'mqtt-react';\n\n\nimport _MainContainer from './mqtt/MainContainer';\n\n\nconst MainContainer = subscribe({topic: 'restaurant/buttons'})(_MainContainer);\n\nclass App extends Component {\n  constructor(props) {\n    super();\n \n    this.state = ({\n      isFull: false\n    });\n  }\n \n  goFull = () => {\n    this.setState({ isFull: true });\n  }\n\n  setPage = (newPage) => {\n    this.setState({ page: newPage });\n  }\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <button onClick={this.goFull}>\n          Go Fullscreen\n        </button>\n        <Fullscreen\n          enabled={this.state.isFull}\n          onChange={isFull => this.setState({isFull})}\n        >\n          <div className=\"fullscreen-enabled\">\n            <Connector mqttProps=\"ws://192.168.100.103:12345/\">\n              <MainContainer/>\n            </Connector>\n          </div>\n        </Fullscreen>\n      </div>\n    );\n  }\n}\n//<MessageList/>\n\nexport default App;"]},"metadata":{},"sourceType":"module"}