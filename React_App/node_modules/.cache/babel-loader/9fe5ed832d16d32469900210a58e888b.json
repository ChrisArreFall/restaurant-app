{"ast":null,"code":"var _jsxFileName = \"/Users/chris/Documents Local/SOA/Proyecto1/restaurantApp/restaurant-app/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { Connector } from 'mqtt-react';\nimport { subscribe } from 'mqtt-react';\nimport Fullscreen from \"react-full-screen\";\n\nconst _MessageList = props => {\n  return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"Button Clicked: \", props.data);\n}; // simple subscription to messages\n\n\nconst MessageList = subscribe({\n  topic: 'restaurant/buttons'\n})(_MessageList);\n\nclass App extends Component {\n  constructor(props) {\n    super();\n\n    this.goFull = () => {\n      this.setState({\n        isFull: true\n      });\n    };\n\n    this.state = {\n      isFull: false\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.goFull,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Go Fullscreen\"), React.createElement(Fullscreen, {\n      enabled: this.state.isFull,\n      onChange: isFull => this.setState({\n        isFull\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"full-screenable-node\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Connector, {\n      mqttProps: \"ws://192.168.100.103:12345/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(MessageList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/chris/Documents Local/SOA/Proyecto1/restaurantApp/restaurant-app/src/App.js"],"names":["React","Component","Connector","subscribe","Fullscreen","_MessageList","props","data","MessageList","topic","App","constructor","goFull","setState","isFull","state","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAOC,UAAP,MAAuB,mBAAvB;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAoBA,KAAK,CAACC,IAA1B,CAAP;AACD,CAFD,C,CAIA;;;AACA,MAAMC,WAAW,GAAGL,SAAS,CAAC;AAC5BM,EAAAA,KAAK,EAAE;AADqB,CAAD,CAAT,CAEjBJ,YAFiB,CAApB;;AAIA,MAAMK,GAAN,SAAkBT,SAAlB,CAA4B;AAC1BU,EAAAA,WAAW,CAACL,KAAD,EAAQ;AACjB;;AADiB,SAQnBM,MARmB,GAQV,MAAM;AACb,WAAKC,QAAL,CAAc;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAd;AACD,KAVkB;;AAGjB,SAAKC,KAAL,GAAa;AACXD,MAAAA,MAAM,EAAE;AADG,KAAb;AAGD;;AAODE,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,OAAO,EAAE,KAAKJ,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAKE,oBAAC,UAAD;AACE,MAAA,OAAO,EAAE,KAAKG,KAAL,CAAWD,MADtB;AAEE,MAAA,QAAQ,EAAEA,MAAM,IAAI,KAAKD,QAAL,CAAc;AAACC,QAAAA;AAAD,OAAd,CAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,6BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CADF,CAJF,CALF,CADF;AAsBD;;AArCyB;;AAwC5B,eAAeJ,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport { Connector } from 'mqtt-react';\nimport { subscribe } from 'mqtt-react';\nimport Fullscreen from \"react-full-screen\";\n\nconst _MessageList = (props) => {\n  return <p>Button Clicked: {props.data}</p>\n};\n \n// simple subscription to messages\nconst MessageList = subscribe({\n  topic: 'restaurant/buttons'\n})(_MessageList)\n\nclass App extends Component {\n  constructor(props) {\n    super();\n \n    this.state = {\n      isFull: false,\n    };\n  }\n \n  goFull = () => {\n    this.setState({ isFull: true });\n  }\n\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <button onClick={this.goFull}>\n          Go Fullscreen\n        </button>\n \n        <Fullscreen\n          enabled={this.state.isFull}\n          onChange={isFull => this.setState({isFull})}\n        >\n          <div className=\"full-screenable-node\">\n            <Connector mqttProps=\"ws://192.168.100.103:12345/\">\n              <div className=\"App\">\n                <div className=\"App-header\"></div>\n                <MessageList/>\n              </div>\n            </Connector>\n          </div>\n        </Fullscreen>\n        \n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}